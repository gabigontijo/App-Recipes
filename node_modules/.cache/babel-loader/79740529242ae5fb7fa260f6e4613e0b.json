{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documents/Trybe/Projetos/sd-025-a-project-recipes-app/src/components/IngredientsProgress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IngredientProgress(props) {\n  _s();\n\n  const {\n    recipeType\n  } = props;\n  const [checked, setChecked] = useState(false);\n  const [classCheckbox, setClassCheckbox] = useState('');\n\n  const handleCheckbox = () => {\n    if (!checked) {\n      setChecked(true);\n      setClassCheckbox('radio-ckecked');\n    }\n\n    if (checked) {\n      setChecked(false);\n      setClassCheckbox('');\n    }\n  };\n\n  function renderIngredients(param1) {\n    const asArray = Object.entries(recipeType);\n    const filtered = asArray.filter(_ref => {\n      let [key, value] = _ref;\n      return key.includes(param1) && value !== null && value !== '';\n    });\n    const ingredients = filtered.map(el => el[1]);\n    return ingredients;\n  }\n\n  const ingredientsName = renderIngredients('Ingredient');\n  const IngredientsQuantity = renderIngredients('Measure');\n\n  const juntaArrays = () => {\n    const newArray = [];\n\n    for (let index = 0; index < ingredientsName.length; index += 1) {\n      newArray.push(`${IngredientsQuantity[index]} ${ingredientsName[index]}`);\n    }\n\n    return newArray;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: juntaArrays().map((ingred, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      \"data-testid\": `${index}-ingredient-step`,\n      htmlFor: \"ingredients\",\n      children: [ingred, ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"ingredients\",\n        id: \"ingredients\",\n        checked: checked,\n        onClick: handleCheckbox,\n        className: classCheckbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), ' ']\n    }, ingred, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IngredientProgress, \"hXWg97Yt9LJ/4ft/X+d1zLHp9II=\");\n\n_c = IngredientProgress;\nIngredientProgress.propTypes = {\n  recipeType: PropTypes.shape({}).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientProgress\");","map":{"version":3,"names":["React","useState","PropTypes","IngredientProgress","props","recipeType","checked","setChecked","classCheckbox","setClassCheckbox","handleCheckbox","renderIngredients","param1","asArray","Object","entries","filtered","filter","key","value","includes","ingredients","map","el","ingredientsName","IngredientsQuantity","juntaArrays","newArray","index","length","push","ingred","propTypes","shape","isRequired"],"sources":["/home/gabriela/Documents/Trybe/Projetos/sd-025-a-project-recipes-app/src/components/IngredientsProgress.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function IngredientProgress(props) {\n  const { recipeType } = props;\n  const [checked, setChecked] = useState(false);\n  const [classCheckbox, setClassCheckbox] = useState('');\n\n  const handleCheckbox = () => {\n    if (!checked) {\n      setChecked(true);\n      setClassCheckbox('radio-ckecked');\n    }\n    if (checked) {\n      setChecked(false);\n      setClassCheckbox('');\n    }\n  };\n\n  function renderIngredients(param1) {\n    const asArray = Object.entries(recipeType);\n    const filtered = asArray.filter(([key, value]) => key.includes(param1)\n    && value !== null && value !== '');\n    const ingredients = filtered.map((el) => el[1]);\n    return ingredients;\n  }\n\n  const ingredientsName = renderIngredients('Ingredient');\n  const IngredientsQuantity = renderIngredients('Measure');\n\n  const juntaArrays = () => {\n    const newArray = [];\n    for (let index = 0; index < ingredientsName.length; index += 1) {\n      newArray.push(`${IngredientsQuantity[index]} ${ingredientsName[index]}`);\n    }\n    return newArray;\n  };\n  return (\n    <div>\n      {juntaArrays().map((ingred, index) => (\n        <label\n          key={ ingred }\n          data-testid={ `${index}-ingredient-step` }\n          htmlFor=\"ingredients\"\n        >\n          {ingred}\n          {' '}\n          <input\n            type=\"checkbox\"\n            name=\"ingredients\"\n            id=\"ingredients\"\n            checked={ checked }\n            onClick={ handleCheckbox }\n            className={ classCheckbox }\n          />\n          {' '}\n\n        </label>))}\n\n    </div>\n  );\n}\n\nIngredientProgress.propTypes = {\n  recipeType: PropTypes.shape({\n  }).isRequired,\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAAA;;EAChD,MAAM;IAAEC;EAAF,IAAiBD,KAAvB;EACA,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;;EAEA,MAAMS,cAAc,GAAG,MAAM;IAC3B,IAAI,CAACJ,OAAL,EAAc;MACZC,UAAU,CAAC,IAAD,CAAV;MACAE,gBAAgB,CAAC,eAAD,CAAhB;IACD;;IACD,IAAIH,OAAJ,EAAa;MACXC,UAAU,CAAC,KAAD,CAAV;MACAE,gBAAgB,CAAC,EAAD,CAAhB;IACD;EACF,CATD;;EAWA,SAASE,iBAAT,CAA2BC,MAA3B,EAAmC;IACjC,MAAMC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAeV,UAAf,CAAhB;IACA,MAAMW,QAAQ,GAAGH,OAAO,CAACI,MAAR,CAAe;MAAA,IAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;MAAA,OAAkBD,GAAG,CAACE,QAAJ,CAAaR,MAAb,KAC/CO,KAAK,KAAK,IADqC,IAC7BA,KAAK,KAAK,EADC;IAAA,CAAf,CAAjB;IAEA,MAAME,WAAW,GAAGL,QAAQ,CAACM,GAAT,CAAcC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAAvB,CAApB;IACA,OAAOF,WAAP;EACD;;EAED,MAAMG,eAAe,GAAGb,iBAAiB,CAAC,YAAD,CAAzC;EACA,MAAMc,mBAAmB,GAAGd,iBAAiB,CAAC,SAAD,CAA7C;;EAEA,MAAMe,WAAW,GAAG,MAAM;IACxB,MAAMC,QAAQ,GAAG,EAAjB;;IACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,eAAe,CAACK,MAA5C,EAAoDD,KAAK,IAAI,CAA7D,EAAgE;MAC9DD,QAAQ,CAACG,IAAT,CAAe,GAAEL,mBAAmB,CAACG,KAAD,CAAQ,IAAGJ,eAAe,CAACI,KAAD,CAAQ,EAAtE;IACD;;IACD,OAAOD,QAAP;EACD,CAND;;EAOA,oBACE;IAAA,UACGD,WAAW,GAAGJ,GAAd,CAAkB,CAACS,MAAD,EAASH,KAAT,kBACjB;MAEE,eAAe,GAAEA,KAAM,kBAFzB;MAGE,OAAO,EAAC,aAHV;MAAA,WAKGG,MALH,EAMG,GANH,eAOE;QACE,IAAI,EAAC,UADP;QAEE,IAAI,EAAC,aAFP;QAGE,EAAE,EAAC,aAHL;QAIE,OAAO,EAAGzB,OAJZ;QAKE,OAAO,EAAGI,cALZ;QAME,SAAS,EAAGF;MANd;QAAA;QAAA;QAAA;MAAA,QAPF,EAeG,GAfH;IAAA,GACQuB,MADR;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA1DuB5B,kB;;KAAAA,kB;AA4DxBA,kBAAkB,CAAC6B,SAAnB,GAA+B;EAC7B3B,UAAU,EAAEH,SAAS,CAAC+B,KAAV,CAAgB,EAAhB,EACTC;AAF0B,CAA/B"},"metadata":{},"sourceType":"module"}